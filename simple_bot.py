# -*- coding: utf-8 -*-
import logging
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram ID
ADMIN_ID = 1238802718  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID

# –¶–µ–Ω—ã –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –º–µ—Ç—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —É–±–æ—Ä–∫–∏
CLEANING_PRICES = {
    '–ì–µ–Ω.—É–±–æ—Ä–∫–∞': 125,
    '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è': 75,
    '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π': 190,
    '–ú—ã—Ç—å–µ –æ–∫–æ–Ω': 100
}

# –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
CLEANING_DETAILS = {
    '–ì–µ–Ω.—É–±–æ—Ä–∫–∞': {
        'image_path': r'C:\Users\travo\Desktop\tg_bot\–≥–µ–Ω–µ—Ä–∞–ª–∫–∞.jpg',
        'details_text': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –ø–æ–ª–Ω—É—é —É–±–æ—Ä–∫—É –≤—Å–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã: —É–¥–∞–ª–µ–Ω–∏–µ –ø—ã–ª–∏, —á–∏—Å—Ç–∫–∞ –ø–æ–ª–æ–≤, –≤–ª–∞–∂–Ω–∞—è —É–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –∏ —Ç.–¥.'
    },
    '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è': {
        'image_path': r'C:\Users\travo\Desktop\tg_bot\–ø–æ–≤—Å–µ–¥–Ω–µ–≤–∫–∞.jpg',
        'details_text': '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è —É–±–æ—Ä–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —á–∏—Å—Ç–æ—Ç—ã: –ø—Ä–æ—Ç–∏—Ä–∫–∞ –ø—ã–ª–∏, –º—ã—Ç—å–µ –ø–æ–ª–æ–≤, —É–±–æ—Ä–∫–∞ –Ω–∞ –∫—É—Ö–Ω–µ –∏ –≤ —Å–∞–Ω—É–∑–ª–µ.'
    },
    '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π': {
        'image_path': r'C:\Users\travo\Desktop\tg_bot\–ø–æ—Å–ª–µ—Å—Ç—Ä–æ–π.jpg',
        'details_text': '–£–±–æ—Ä–∫–∞ –ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞ –≤–∫–ª—é—á–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –ø—ã–ª–∏, –æ—á–∏—Å—Ç–∫—É –æ–∫–æ–Ω –∏ –¥–≤–µ—Ä–µ–π, —É–¥–∞–ª–µ–Ω–∏–µ —Å–ª–µ–¥–æ–≤ –∫—Ä–∞—Å–∫–∏ –∏ —Ç.–¥.'
    },
    '–ú—ã—Ç—å–µ –æ–∫–æ–Ω': {
        'image_path': r'C:\Users\travo\Desktop\tg_bot\–æ–∫–Ω–∞.jpg',
        'details_text': '–ú—ã—Ç—å–µ –æ–∫–æ–Ω –≤–∫–ª—é—á–∞–µ—Ç –æ—á–∏—Å—Ç–∫—É —Å—Ç–µ–∫–æ–ª —Å–Ω–∞—Ä—É–∂–∏ –∏ –∏–∑–Ω—É—Ç—Ä–∏, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—Ç–∏—Ä–∫—É —Ä–∞–º –∏ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–æ–≤.'
    }
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –º–µ–Ω—é
MENU_TREE = {
    'main_menu': {
        'message': '–ü—Ä–∏–≤–µ—Ç! –Ø –í–µ—Ä–∞, —Ç–≤–æ—è —Ñ–µ—è —á–∏—Å—Ç–æ—Ç—ã.\n–ú–æ–π —Ä–æ–±–æ—Ç-—É–±–æ—Ä—â–∏–∫ –ø–æ–º–æ–∂–µ—Ç:\n- —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–±–æ—Ä–∫–∏\n- —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π.',
        'options': ['–¢–∞—Ä–∏—Ñ—ã', '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', '–°–≤—è–∑–∞—Ç—å—Å—è'],
        'next_state': {
            '–¢–∞—Ä–∏—Ñ—ã': 'show_tariffs',
            '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä': 'calculator_menu',
            '–°–≤—è–∑–∞—Ç—å—Å—è': 'contact'
        }
    },
    'admin_menu': {
        'message': '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        'options': ['–í –Ω–∞—á–∞–ª–æ'],
        'next_state': {
            '–í –Ω–∞—á–∞–ª–æ': 'main_menu'
        }
    },
    'show_tariffs': {
        'message': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π:',
        'options': ['–ì–µ–Ω.—É–±–æ—Ä–∫–∞', '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è', '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π', '–ú—ã—Ç—å–µ –æ–∫–æ–Ω', '–í –Ω–∞—á–∞–ª–æ'],
        'next_state': {
            '–ì–µ–Ω.—É–±–æ—Ä–∫–∞': 'detail_–ì–µ–Ω.—É–±–æ—Ä–∫–∞',
            '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è': 'detail_–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è',
            '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π': 'detail_–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π',
            '–ú—ã—Ç—å–µ –æ–∫–æ–Ω': 'detail_–ú—ã—Ç—å–µ –æ–∫–æ–Ω',
            '–í –Ω–∞—á–∞–ª–æ': 'main_menu'
        }
    },
    'calculator_menu': {
        'message': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–±–æ—Ä–∫–∏:',
        'options': ['–ì–µ–Ω.—É–±–æ—Ä–∫–∞', '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è', '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π', '–ú—ã—Ç—å–µ –æ–∫–æ–Ω', '–í –Ω–∞—á–∞–ª–æ'],
        'next_state': {
            '–ì–µ–Ω.—É–±–æ—Ä–∫–∞': 'enter_square_meters',
            '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è': 'enter_square_meters',
            '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π': 'enter_square_meters',
            '–ú—ã—Ç—å–µ –æ–∫–æ–Ω': 'enter_square_meters',
            '–í –Ω–∞—á–∞–ª–æ': 'main_menu'
        }
    },
    'enter_square_meters': {
        'message': '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–æ–≤:',
        'options': ['–í –Ω–∞—á–∞–ª–æ'],
        'next_state': {
            'calculate_result': 'calculate_result'
        }
    },
    'calculate_result': {
        'options': ['–í –Ω–∞—á–∞–ª–æ', '–°–≤—è–∑–∞—Ç—å—Å—è'],
        'next_state': {
            '–í –Ω–∞—á–∞–ª–æ': 'main_menu',
            '–°–≤—è–∑–∞—Ç—å—Å—è': 'contact'
        }
    },
    'contact': {
        'message': '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –≤—ã –º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã:',
        'options': ['–í –Ω–∞—á–∞–ª–æ'],
        'next_state': {
            '–í –Ω–∞—á–∞–ª–æ': 'main_menu'
        }
    }
}

# –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
for tariff_name, details in CLEANING_DETAILS.items():
    MENU_TREE[f'detail_{tariff_name}'] = {
        'message': details['details_text'],
        'image_path': details['image_path'],
        'options': ['–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', '–í –Ω–∞—á–∞–ª–æ'],
        'next_state': {
            '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä': 'calculator_menu',
            '–í –Ω–∞—á–∞–ª–æ': 'main_menu'
        }
    }

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
async def send_message(update: Update, context: ContextTypes.DEFAULT_TYPE, message: str, options: list) -> None:
    reply_markup = ReplyKeyboardMarkup([options], resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text(message, reply_markup=reply_markup)
    logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: %s", message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
async def send_inline_message(update: Update, context: ContextTypes.DEFAULT_TYPE, message: str, buttons: list) -> None:
    keyboard = InlineKeyboardMarkup(buttons)
    await update.message.reply_text(message, reply_markup=keyboard)
    logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏: %s", message)

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    user_state = context.user_data.get('state', 'main_menu')

    logger.info("–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: %s", user_state)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id == ADMIN_ID:
        if user_state == 'main_menu':
            context.user_data['state'] = 'admin_menu'
            menu = MENU_TREE['admin_menu']
            await send_message(update, context, menu['message'], menu['options'])
            return
        elif user_state == 'admin_menu':
            if update.message.text in MENU_TREE['admin_menu']['next_state']:
                next_state = MENU_TREE['admin_menu']['next_state'][update.message.text]
                context.user_data['state'] = next_state
                next_menu = MENU_TREE.get(next_state)
                if next_menu:
                    await send_message(update, context, next_menu['message'], next_menu['options'])
                return
            else:
                await send_message(update, context, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.', MENU_TREE['admin_menu']['options'])
                return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    menu = MENU_TREE.get(user_state)
    user_choice = update.message.text

    if user_choice == '–í –Ω–∞—á–∞–ª–æ':
        context.user_data['state'] = 'main_menu'
        menu = MENU_TREE['main_menu']
        await send_message(update, context, menu['message'], menu['options'])
        return

    if user_choice in menu['next_state']:
        next_state = menu['next_state'][user_choice]
        context.user_data['state'] = next_state
        next_menu = MENU_TREE.get(next_state)
        if next_menu:
            await send_message(update, context, next_menu['message'], next_menu['options'])
    else:
        await send_message(update, context, menu.get('fallback', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.'), menu['options'])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    if query.data == "show_phone_number":
        await query.edit_message_text(text="üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 995 612 45 81")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É–±–æ—Ä–∫–∏
def calculate(price_per_sqm, sqm):
    total_cost = price_per_sqm * sqm
    formatted_message = f'–°—Ç–æ–∏–º–æ—Å—Ç—å —É–±–æ—Ä–∫–∏: {total_cost:.2f} —Ä—É–±.'
    return {
        'total_cost': total_cost,
        'formatted_message': formatted_message
    }

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    context.user_data['state'] = 'main_menu'
    menu = MENU_TREE['main_menu']
    await send_message(update, context, menu['message'], menu['options'])

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")

    # –í–∞—à —Ç–æ–∫–µ–Ω
    TOKEN = '7363733923:AAHKPw_fvjG2F3PBE2XP6Sj49u04uy7wpZE'  # –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω —Å—é–¥–∞

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Application –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω
    application = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
    application.add_handler(CallbackQueryHandler(button_click))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω, –Ω–∞—á–∞–ª–æ polling...")
    application.run_polling()

if __name__ == '__main__':
    main()
