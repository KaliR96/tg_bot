# -*- coding: utf-8 -*-

import logging
from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
import os

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)
# ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
CHANNEL_ID = -1002249882445
# –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram ID
ADMIN_ID = 1238802718  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID

# –¶–µ–Ω—ã –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –º–µ—Ç—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —É–±–æ—Ä–∫–∏
CLEANING_PRICES = {
    '–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº': 125,
    '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ': 75,
    '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†': 190,
    '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥': 350
}

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
base_dir = os.path.dirname(os.path.abspath(__file__))

# –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
CLEANING_DETAILS = {
    '–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº': {
        'image_path': os.path.join(base_dir, 'img', 'general.jpg'),
        'details_text': [
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ç–∞—Ä–∏—Ñ—É "–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞" —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ 125—Ä. –∑–∞ –∫–≤.–ú',
            '–ü–µ—Ä–µ—á–µ–Ω—å —É—Å–ª—É–≥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–π —É–±–æ—Ä–∫–∏:\n\n1. –£–±–æ—Ä–∫–∞ –ø–æ–ª–æ–≤:\n- –í–ª–∞–∂–Ω–∞—è —É–±–æ—Ä–∫–∞ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–æ–≤.\n- –ì–ª—É–±–æ–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç—Ä—É–¥–Ω–æ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç, –≤–∫–ª—é—á–∞—è —É–≥–ª—ã –∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –ø–æ–¥ –º–µ–±–µ–ª—å—é.\n\n2. –ú–æ–π–∫–∞ –∑–µ—Ä–∫–∞–ª:\n- –û—á–∏—Å—Ç–∫–∞ –∑–µ—Ä–∫–∞–ª –∏ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –¥–æ –±–ª–µ—Å–∫–∞.\n- –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–ª–µ—Ç–∞ –∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π.\n\n3. –£–±–æ—Ä–∫–∞ –∫—É—Ö–Ω–∏:\n- –û—á–∏—â–µ–Ω–∏–µ –Ω–∞—Å—Ç–µ–Ω–Ω–æ–≥–æ —Ñ–∞—Ä—Ç—É–∫–∞ –æ—Ç —Å–ª–µ–¥–æ–≤ –≥–æ—Ç–æ–≤–∫–∏.\n- –ß–∏—Å—Ç–∫–∞ –∏ –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è –∫—É—Ö–æ–Ω–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –≤–Ω—É—Ç—Ä–∏ –≥–∞—Ä–Ω–∏—Ç—É—Ä–∞ –∏ —Å–Ω–∞—Ä—É–∂–∏.\n- –ú—ã—Ç—å–µ –∏ –ø–æ–ª–∏—Ä–æ–≤–∫–∞ –∫—É—Ö–æ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ (–¥—É—Ö–æ–≤–∫–∞, –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞, —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫).',
            '4. –£–±–æ—Ä–∫–∞ –≤–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã –∏ —Ç—É–∞–ª–µ—Ç–∞:\n- –ú—ã—Ç—å–µ —Å—Ç–µ–Ω –æ—Ç –∏–∑–≤–µ—Å—Ç–∫–æ–≤–æ–≥–æ –Ω–∞–ª–µ—Ç–∞ –≤ —Å–∞–Ω—É–∑–ª–∞—Ö.\n- –ß–∏—Å—Ç–∫–∞ –∏ –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏ (—É–Ω–∏—Ç–∞–∑, —Ä–∞–∫–æ–≤–∏–Ω–∞, –≤–∞–Ω–Ω–∞, –¥—É—à).\n- –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–≤–µ—Å—Ç–∫–æ–≤–æ–≥–æ –Ω–∞–ª–µ—Ç–∞ –∏ –ø–ª–µ—Å–µ–Ω–∏.\n- –ü–æ–ª–∏—Ä–æ–≤–∫–∞ —Å–º–µ—Å–∏—Ç–µ–ª–µ–π –∏ –∑–µ—Ä–∫–∞–ª.\n\n5. –£–¥–∞–ª–µ–Ω–∏–µ –ø—ã–ª–∏:\n- –ü—Ä–æ—Ç–∏—Ä–∞–Ω–∏–µ –∏ –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –æ—Ç –ø—ã–ª–∏ (–º–µ–±–µ–ª—å, –ø–æ–ª–∫–∏, —Ç–µ—Ö–Ω–∏–∫–∞).\n- –û—á–∏—Å—Ç–∫–∞ –ø–ª–∏–Ω—Ç—É—Å–æ–≤, –∫–∞—Ä–Ω–∏–∑–æ–≤, –¥–≤–µ—Ä–µ–π –∏ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–æ–≤.\n- –£–±–æ—Ä–∫–∞ –ø—ã–ª–∏ —Å –æ—Å–≤–µ—Ç–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–±–æ—Ä–æ–≤ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–µ–∫–æ—Ä–∞.\n\n6. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –∞–Ω—Ç–∏–±–∞–∫—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏:\n- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä—É—á–µ–∫ –¥–≤–µ—Ä–µ–π, –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–µ–π –∏ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç–æ —Ç—Ä–æ–≥–∞–µ–º—ã—Ö –º–µ—Å—Ç.',
            '7. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞:\n- –†–∞—Å–∫–ª–∞–¥–∫–∞ –≤–µ—â–µ–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–µ–Ω–∏—è.\n- –†–∞–∑–±–æ—Ä –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤–µ—â–µ–π, –∫–Ω–∏–≥, –æ–¥–µ–∂–¥—ã.\n\n8. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏:\n- –ú—ã—Ç—å–µ –∂–∞–ª—é–∑–∏.\n- –ß–∏—Å—Ç–∫–∞ –∏ —É—Ö–æ–¥ –∑–∞ –∫–æ–º–Ω–∞—Ç–Ω—ã–º–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏.'
        ]
    },
    '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ': {
        'image_path': os.path.join(base_dir, 'img', 'vacuumcat.png'),
        'details_text': [
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ç–∞—Ä–∏—Ñ—É "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞ —É–±–æ—Ä–∫–∞" —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ 75—Ä. –∑–∞ –∫–≤.–ú',
            '–ü–µ—Ä–µ—á–µ–Ω—å —É—Å–ª—É–≥ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞ "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è —É–±–æ—Ä–∫–∞":\n\n1. –õ–µ–≥–∫–∞—è —É–±–æ—Ä–∫–∞ –ø–æ–ª–æ–≤:\n- –í–ª–∞–∂–Ω–∞—è —É–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π.\n- –û—á–∏—Å—Ç–∫–∞ —Ç—Ä—É–¥–Ω–æ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç, –≤–∫–ª—é—á–∞—è —É–≥–ª—ã –∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –ø–æ–¥ –º–µ–±–µ–ª—å—é.\n\n2. –ü—Ä–æ—Ç–∏—Ä–∫–∞ –ø—ã–ª–∏:\n- –£–¥–∞–ª–µ–Ω–∏–µ –ø—ã–ª–∏ —Å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –º–µ–±–µ–ª–∏, –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–æ–≤, –∏ —Ç–µ—Ö–Ω–∏–∫–∏.\n- –õ–µ–≥–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–ª–∏–Ω—Ç—É—Å–æ–≤ –∏ –¥–≤–µ—Ä–Ω—ã—Ö —Ä—É—á–µ–∫.',
            '3. –£–±–æ—Ä–∫–∞ –∫—É—Ö–Ω–∏:\n- –ü—Ä–æ—Ç–∏—Ä–∫–∞ –∫—É—Ö–æ–Ω–Ω—ã—Ö —Å—Ç–æ–ª–µ—à–Ω–∏—Ü, —Å—Ç–æ–ª–∞ –∏ —Ä–∞–±–æ—á–∏—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π.\n- –û—á–∏—Å—Ç–∫–∞ –≤–∞—Ä–æ—á–Ω–æ–π –ø–∞–Ω–µ–ª–∏ –∏ –≤–Ω–µ—à–Ω–µ–π —á–∞—Å—Ç–∏ –∫—É—Ö–æ–Ω–Ω–æ–≥–æ –≥–∞—Ä–Ω–∏—Ç—É—Ä–∞.\n\n4. –£–±–æ—Ä–∫–∞ –≤–∞–Ω–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã –∏ —Ç—É–∞–ª–µ—Ç–∞:\n- –ß–∏—Å—Ç–∫–∞ –∏ –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏ (—Ä–∞–∫–æ–≤–∏–Ω–∞, —É–Ω–∏—Ç–∞–∑, –¥—É—à–µ–≤–∞—è –∫–∞–±–∏–Ω–∞).\n- –û—á–∏—Å—Ç–∫–∞ –∑–µ—Ä–∫–∞–ª –∏ –ø–æ–ª–æ–∫.\n\n5. –ú–æ–π–∫–∞ –∑–µ—Ä–∫–∞–ª –∏ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –æ—Ç –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤ –ø–∞–ª—å—Ü–µ–≤ –∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π.\n\n6. –í—ã–Ω–æ—Å –º—É—Å–æ—Ä–∞.',
            '7. –ù–∞–≤–µ–¥–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞:\n- –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –≤–µ—â–µ–π –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –º–µ–ª–∫–æ–≥–æ –±–µ—Å–ø–æ—Ä—è–¥–∫–∞.\n- –ó–∞–º–µ–Ω–∞ –ø–æ—Å—Ç–µ–ª—å–Ω–æ–≥–æ –±–µ–ª—å—è –ø–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏.'
        ]
    },
    '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†': {
        'image_path': os.path.join(base_dir, 'img', 'build.jpg'),
        'details_text': [
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ç–∞—Ä–∏—Ñ—É "–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π" —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ 190—Ä. –∑–∞ –∫–≤.–ú',
            '–ü–µ—Ä–µ—á–µ–Ω—å —É—Å–ª—É–≥ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞ "–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π":\n\n1. –í—ã–Ω–æ—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞:\n- –°–±–æ—Ä –∏ –≤—ã–Ω–æ—Å –Ω–µ –∫—Ä—É–ø–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞.\n\n2. –ú–æ–π–∫–∞ –æ–∫–æ–Ω:\n- –¢—â–∞—Ç–µ–ª—å–Ω–∞—è –º–æ–π–∫–∞ –æ–∫–æ–Ω —Å–æ –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–Ω, –≤–∫–ª—é—á–∞—è —Ä–∞–º—ã –∏ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–∏.\n- –£–¥–∞–ª–µ–Ω–∏–µ —Å–ª–µ–¥–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –ø—ã–ª–∏ –∏ –≥—Ä—è–∑–∏.',
            '3. –û–±–µ—Å–ø—ã–ª–∏–≤–∞–Ω–∏–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π:\n- –í–ª–∞–∂–Ω–∞—è –∏ —Å—É—Ö–∞—è —É–±–æ—Ä–∫–∞ —Å—Ç–µ–Ω, –º–µ–±–µ–ª–∏, –ª—é—Å—Ç—Ä, –ø–ª–∏–Ω—Ç—É—Å–æ–≤, —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤ –∏ —Ä–æ–∑–µ—Ç–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –ø—ã–ª–∏.\n\n4. –ú–æ–π–∫–∞ –¥–≤–µ—Ä–µ–π –∏ –¥–≤–µ—Ä–Ω—ã—Ö —Ä–∞–º:\n- –û—á–∏—Å—Ç–∫–∞ –¥–≤–µ—Ä–µ–π –∏ —Ä–∞–º –æ—Ç –ø—ã–ª–∏, —Å–ª–µ–¥–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π.\n- –ü—Ä–æ—Ç–∏—Ä–∫–∞ –∏ –ø–æ–ª–∏—Ä–æ–≤–∫–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —á–∏—Å—Ç–æ—Ç—ã –∏ –±–ª–µ—Å–∫–∞.\n\n5. –ú–æ–π–∫–∞ —Å—Ç–µ–Ω –≤ —Å–∞–Ω—É–∑–ª–∞—Ö:\n- –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—Ç–∏—Ä–∫–∏ –∏ —Å–ª–µ–¥–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–º–µ—Å–µ–π —Å –ø–ª–∏—Ç–∫–∏ –≤ –≤–∞–Ω–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç–∞—Ö –∏ —Å–∞–Ω—É–∑–ª–∞—Ö.',
            '6. –ü–æ–ª–∏—Ä–æ–≤–∫–∞ –∑–µ—Ä–∫–∞–ª –∏ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π:\n- –£–¥–∞–ª–µ–Ω–∏–µ –ø—è—Ç–µ–Ω, –Ω–∞–ª–µ—Ç–∞ –∏ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π.\n- –ù–∞—Ç–∏—Ä–∞–Ω–∏–µ –∑–µ—Ä–∫–∞–ª –∏ –≤—Å–µ—Ö —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –¥–æ –±–ª–µ—Å–∫–∞.\n\n7. –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–ª–∏—Ä–æ–≤–∫–∞ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏:\n- –£–¥–∞–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –≥—Ä—è–∑–∏ –∏ –ø—è—Ç–µ–Ω.\n- –ù–∞—Ç–∏—Ä–∞–Ω–∏–µ –∏ –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è –≤—Å–µ—Ö —Å–∞–Ω—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–±–æ—Ä–æ–≤ (—É–Ω–∏—Ç–∞–∑—ã, —Ä–∞–∫–æ–≤–∏–Ω—ã, –≤–∞–Ω–Ω—ã).\n\n8. –ú—ã—Ç—å–µ –∏ –¥–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è –ø–æ–ª–æ–≤:\n- –ì–ª—É–±–æ–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ–ª–æ–≤ –æ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –ø—ã–ª–∏ –∏ –≥—Ä—è–∑–∏.\n- –î–µ–∑–∏–Ω—Ñ–µ–∫—Ü–∏—è –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π.'
        ]
    },
    '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥': {
        'image_path': os.path.join(base_dir, 'img', 'window.jpg'),
        'details_text': [
            '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ç–∞—Ä–∏—Ñ—É "–ú—ã—Ç—å–µ –æ–∫–æ–Ω" —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ 350—Ä. –∑–∞ —Å—Ç–≤–æ—Ä–∫—É',
            '–ü–µ—Ä–µ—á–µ–Ω—å —É—Å–ª—É–≥ –¥–ª—è –º—ã—Ç—å—è –æ–∫–æ–Ω:\n\n- –ú–æ–π–∫–∞ —Ä–∞–º —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω.\n- –û—á–∏—Å—Ç–∫–∞ —Å—Ç–µ–∫–æ–ª –æ—Ç –Ω–∞–∫–ª–µ–µ–∫ –∏ —Å–ª–µ–¥–æ–≤ –∫–ª–µ—è.\n- –ü–æ–ª–∏—Ä–æ–≤–∫–∞ —Å—Ç–µ–∫–æ–ª —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω.\n-–ú–æ–π–∫–∞ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–æ–≤.\n- –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —á–∏—Å—Ç–æ—Ç—ã –∏ –ø–æ—Ä—è–¥–∫–∞ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.'
        ]
    }
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –º–µ–Ω—é
MENU_TREE = {
    'main_menu': {
        'message': '–ü—Ä–∏–≤–µ—Ç! –Ø –í–µ—Ä–∞, —Ç–≤–æ—è —Ñ–µ—è —á–∏—Å—Ç–æ—Ç—ã.\n\n–ú–æ–π —Ä–æ–±–æ—Ç-—É–±–æ—Ä—â–∏–∫ –ø–æ–º–æ–∂–µ—Ç:\n\nüîç–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º–∏ '
                   '—É—Å–ª—É–≥–∞–º–∏\n\nüßÆ–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–±–æ—Ä–∫–∏\n\nüöó–ó–∞–∫–∞–∑–∞—Ç—å –∫–ª–∏–Ω–∏–Ω–≥ –Ω–∞ –¥–æ–º\n\nüìû–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π.',
        'options': [
            ['–¢–∞—Ä–∏—Ñ—ãüè∑Ô∏è', '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ'],  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞
            ['–°–≤—è–∑–∞—Ç—å—Å—èüìû', '–û—Ç–∑—ã–≤—ãüí¨'],  # –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞
            ['–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüì¢']  # –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞
        ],
        'next_state': {
            '–¢–∞—Ä–∏—Ñ—ãüè∑Ô∏è': 'show_tariffs',
            '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ': 'calculator_menu',
            '–°–≤—è–∑–∞—Ç—å—Å—èüìû': 'contact',
            '–û—Ç–∑—ã–≤—ãüí¨': 'reviews_menu',
            '–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüì¢': 'useful_info'  # –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ useful_info
        }
    },
    'useful_info': {  # –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ useful_info
        'message': '–ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, –∞–∫—Ü–∏–π –∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π!',
        'options': ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        'next_state': {
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu'
        }
    },
    'admin_menu': {
        'message': '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        'options': ['–ú–æ–¥–µ—Ä–∞—Ü–∏—è'],
        'next_state': {
            '–ú–æ–¥–µ—Ä–∞—Ü–∏—è': 'moderation_menu',
        }
    },
    'moderation_menu': {
        'message': '–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é :)',
        'options': ['–ê–¥–º–∏–Ω –º–µ–Ω—é'],
        'next_state': {
            '–ê–¥–º–∏–Ω –º–µ–Ω—é': 'admin_menu'
        }
    },
    'reviews_menu': {
        'message': '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?',
        'options': ['–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –û—Ç–∑—ã–≤—ãüí¨', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],
        'next_state': {
            '–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤': 'write_review',
            '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –û—Ç–∑—ã–≤—ãüí¨': 'view_reviews',
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu'
        }
    },
    'view_reviews': {
        'message': '–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å–µ –æ—Ç–∑—ã–≤—ã –Ω–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ:',
        'options': ['–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],
        'next_state': {
            '–ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞–Ω–∞–ª—É': 'open_channel',
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'reviews_menu'
        }
    },
    'write_review': {
        'message': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤üí¨:',
        'options': ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],
        'next_state': {
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu'
        }
    },

    'show_tariffs': {
        'message': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π:',
        'options': [
            ['–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº', '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ'],
            ['–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†', '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥'],
            ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô']
        ],
        'next_state': {
            '–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº': 'detail_–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº',
            '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ': 'detail_–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ',
            '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†': 'detail_–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†',
            '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥': 'detail_–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥',
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu'
        }
    },
    'calculator_menu': {
        'message': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–±–æ—Ä–∫–∏üß∫:',
        'options': [
            ['–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº', '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ'],
            ['–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†', '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥'],
            ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô']
        ],
        'next_state': {
            '–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº': 'enter_square_meters',
            '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ': 'enter_square_meters',
            '–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–πüõ†': 'enter_square_meters',
            '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥': 'enter_square_meters',
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu'
        }
    },
    'enter_square_meters': {
        'message': '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–æ–≤,\n–∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å.',
        'options': ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],
        'next_state': {
            'add_extras': 'add_extras'  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥
        }
    },
    'enter_window_panels': {
        'message': '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–∫–æ–Ω–Ω—ã—Ö —Å—Ç–≤–æ—Ä–æ–∫:',
        'options': ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],
        'next_state': {
            'calculate_result': 'calculate_result'
        }
    },
    'add_extras': {  # –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø—É—Å–ª—É–≥
        'message': '–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–∞—Å—á–µ—Ç:',
        'options': [
            ['–ì–ª–∞–∂–∫–∞ –±–µ–ª—å—è', '–°—Ç–∏—Ä–∫–∞ –±–µ–ª—å—è'],
            ['–ü–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ—Ç–æ–∫', '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏'],
            ['–ú—ã—Ç—å–µ –æ–∫–æ–Ω(1 —Å—Ç–≤–æ—Ä–∫–∞)üß¥'],
            ['–°–≤—è–∑–∞—Ç—å—Å—èüìû'],
            ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],
        ],
        'next_state': {
            '–ì–ª–∞–∂–∫–∞ –±–µ–ª—å—è': 'add_extras',
            '–°—Ç–∏—Ä–∫–∞ –±–µ–ª—å—è': 'add_extras',
            '–ü–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ—Ç–æ–∫': 'add_extras',
            '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏': 'add_extras',
            '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥': 'add_extras',
            '–°–≤—è–∑–∞—Ç—å—Å—èüìû': 'contact',  # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ 'contact' –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu'
        }
    },
    'extras_options': {  # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –¥–æ–ø—É—Å–ª—É–≥
        'options': [
            ['–ì–ª–∞–∂–∫–∞ –±–µ–ª—å—è', '–°—Ç–∏—Ä–∫–∞ –±–µ–ª—å—è'],
            ['–ü–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ—Ç–æ–∫', '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏'],
            ['–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥(1 —Å—Ç–≤–æ—Ä–∫–∞)'],
            ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô', '–°–≤—è–∑–∞—Ç—å—Å—èüìû']
        ]
    },
    'calculate_result': {
        'options': ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô', '–°–≤—è–∑–∞—Ç—å—Å—èüìû'],
        'next_state': {
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu',
            '–°–≤—è–∑–∞—Ç—å—Å—èüìû': 'contact'
        }
    },
    'contact': {
        'message': '–°–≤—è–∑–∞—Ç—å—Å—èüìû —Å–æ –º–Ω–æ–π –≤—ã –º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã:',
        'options': ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'],
        'next_state': {
            '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô': 'main_menu'
        }
    }
}

# –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ"
for tariff_name, details in CLEANING_DETAILS.items():
    MENU_TREE[f'detail_{tariff_name}'] = {
        'message': details['details_text'],
        'image_path': details['image_path'],
        'options': ['–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ', '–ù–∞–∑–∞–¥'],
        'next_state': {
            '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ': 'calculator_menu',
            '–ù–∞–∑–∞–¥': 'show_tariffs'
        }
    }


# –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
async def send_message(update: Update, context: ContextTypes.DEFAULT_TYPE, message: str, options: list) -> None:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ `options` —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
    if isinstance(options[0], list):
        reply_markup = ReplyKeyboardMarkup(options, resize_keyboard=True, one_time_keyboard=True)
    else:
        # –ï—Å–ª–∏ `options` - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–ø–∏—Å–æ–∫, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
        reply_markup = ReplyKeyboardMarkup([options], resize_keyboard=True, one_time_keyboard=True)

    # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º: {message} –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º: {context.user_data.get('state', 'main_menu')}")

    await update.message.reply_text(message, reply_markup=reply_markup)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
async def send_inline_message(update: Update, context: ContextTypes.DEFAULT_TYPE, message: str, buttons: list) -> None:
    keyboard = InlineKeyboardMarkup(buttons)
    await update.message.reply_text(message, reply_markup=keyboard)
    logger.info("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏: %s", message)


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    user_state = context.user_data.get('state', 'main_menu')
    logger.info("–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: %s", user_state)
    user_choice = update.message.text.strip()

    # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüì¢"
    if user_choice == '–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—èüì¢':
        context.user_data['state'] = 'useful_info'
        await show_useful_info(update, context)
        return

    if user_state == 'write_review':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –º–µ–¥–∏–∞
        review_text = update.message.caption or update.message.text or ""
        message_id = update.message.message_id
        user_name = update.message.from_user.full_name

        if review_text == MENU_TREE['write_review']['options'][0]:
            await send_message(update, context, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", MENU_TREE['main_menu']['options'])
            context.user_data['state'] = 'main_menu'
            return
        elif review_text == '':
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –∫–∞–∫ –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            review_data = {
                'review': review_text,
                'user_name': user_name,
                'user_id': user_id,
                'message_id': message_id,  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π message_id –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Ü–µ–ª–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                'approved': False
            }

            context.application.bot_data.setdefault('reviews', []).append(review_data)
            logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")

            # await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.")
            # await send_message(update, context, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.", MENU_TREE['write_review']['options'])
            context.user_data['state'] = 'write_review'
            return
        else:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –∫–∞–∫ –µ–¥–∏–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            review_data = {
                'review': review_text,
                'user_name': user_name,
                'user_id': user_id,
                'message_id': message_id,  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π message_id –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Ü–µ–ª–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                'approved': False
            }

            context.application.bot_data.setdefault('reviews', []).append(review_data)
            logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")

            # await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.")
            await send_message(update, context, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –û–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.",
                               MENU_TREE['write_review']['options'])
            context.user_data['state'] = 'write_review'
            return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –û—Ç–∑—ã–≤—ãüí¨"
    if user_state == 'reviews_menu' and update.message.text and update.message.text.strip() == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –û—Ç–∑—ã–≤—ãüí¨':
        channel_url = "https://t.me/CleaningSphere"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
        await update.message.reply_text(f"–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Å–µ –æ—Ç–∑—ã–≤—ã –Ω–∞ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ: {channel_url}")

        reply_keyboard = [['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô']]
        reply_markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=reply_markup)

        context.user_data['state'] = 'main_menu'
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ç–∞—Ä–∏—Ñ–æ–≤
    if user_state.startswith('detail_') and update.message.text.strip() == '–ù–∞–∑–∞–¥':
        context.user_data['state'] = 'show_tariffs'
        await send_message(update, context, MENU_TREE['show_tariffs']['message'], MENU_TREE['show_tariffs']['options'])
        return

    if user_id == ADMIN_ID:
        if user_state == 'main_menu':
            context.user_data['state'] = 'admin_menu'
            menu = MENU_TREE['admin_menu']
            await send_message(update, context, menu['message'], menu['options'])
            return

        if user_state == 'admin_menu':
            if update.message.text.strip() == '–ú–æ–¥–µ—Ä–∞—Ü–∏—è':
                reviews = context.application.bot_data.get('reviews', [])
                pending_reviews = [review for review in reviews if not review.get('approved', False)]

                if not pending_reviews:
                    await send_message(update, context, "–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏.",
                                       MENU_TREE['admin_menu']['options'])
                    context.user_data['state'] = 'admin_menu'
                    return

        elif user_state == 'moderation_menu':
            if update.message.text.strip() == '–ê–¥–º–∏–Ω –º–µ–Ω—é':
                context.user_data['state'] = 'admin_menu'
                menu = MENU_TREE['admin_menu']
                await send_message(update, context, menu['message'], menu['options'])
                return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤
    if user_id == ADMIN_ID and user_state == 'admin_menu':
        if update.message.text.strip() == '–ú–æ–¥–µ—Ä–∞—Ü–∏—è':
            await moderate_reviews(update, context, user_state)
            return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è "–û—Ç–∑—ã–≤—ãüí¨"
    if user_state == 'reviews_menu':
        if update.message.text.strip() in MENU_TREE['reviews_menu']['next_state']:
            context.user_data['state'] = MENU_TREE['reviews_menu']['next_state'][update.message.text.strip()]
            next_menu = MENU_TREE.get(context.user_data['state'])
            await send_message(update, context, next_menu['message'], next_menu['options'])
        else:
            await send_message(update, context, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.",
                               MENU_TREE['reviews_menu']['options'])
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    menu = MENU_TREE.get(user_state)
    user_choice = update.message.text.strip() if update.message.text else None

    if user_choice == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô':
        context.user_data['state'] = 'main_menu'
        menu = MENU_TREE['main_menu']
        await send_message(update, context, menu['message'], menu['options'])
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ –≤ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µüßÆ
    if user_state == 'calculator_menu' and user_choice in CLEANING_PRICES:
        context.user_data['selected_tariff'] = user_choice
        if user_choice == '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥':
            context.user_data['state'] = 'enter_window_panels'
            await send_message(update, context, MENU_TREE['enter_window_panels']['message'],
                               MENU_TREE['enter_window_panels']['options'])
        else:
            context.user_data['price_per_sqm'] = CLEANING_PRICES[user_choice]
            context.user_data['state'] = 'enter_square_meters'
            await send_message(update, context, MENU_TREE['enter_square_meters']['message'],
                               MENU_TREE['enter_square_meters']['options'])
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ –≤ –º–µ–Ω—é "–¢–∞—Ä–∏—Ñ—ãüè∑Ô∏è"
    if user_state == 'show_tariffs' and user_choice in CLEANING_PRICES:
        details = CLEANING_DETAILS.get(user_choice)
        if details:
            try:
                with open(details['image_path'], 'rb') as image_file:
                    await update.message.reply_photo(photo=image_file)
            except FileNotFoundError:
                logger.error(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {details['image_path']}")
                await update.message.reply_text("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.")

            context.user_data['selected_tariff'] = user_choice
            context.user_data['state'] = f'detail_{user_choice}'

            for part in details['details_text']:
                await update.message.reply_text(part)

            await send_message(update, context, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                               MENU_TREE[f'detail_{user_choice}']['options'])
        else:
            await send_message(update, context, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.",
                               MENU_TREE['show_tariffs']['options'])
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—é —Ç–∞—Ä–∏—Ñ–∞
    if user_state.startswith('detail_') and user_choice == '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ':
        tariff_name = user_state.split('_')[1]
        context.user_data['selected_tariff'] = tariff_name

        if tariff_name == '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥':
            context.user_data['state'] = 'enter_window_panels'
            await send_message(update, context, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–∫–æ–Ω–Ω—ã—Ö —Å—Ç–≤–æ—Ä–æ–∫:", ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'])
        else:
            context.user_data['price_per_sqm'] = CLEANING_PRICES[tariff_name]
            context.user_data['state'] = 'enter_square_meters'
            await send_message(update, context, MENU_TREE['enter_square_meters']['message'],
                               MENU_TREE['enter_square_meters']['options'])
        return
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–æ–≤
    if user_state == 'enter_square_meters':
        try:
            # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
            sqm = float(user_choice)
            logger.info(f"–í–≤–µ–¥–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–æ–≤: {sqm}")

            price_per_sqm = context.user_data.get('price_per_sqm')
            if price_per_sqm is None:
                await send_message(update, context,
                                   '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.',
                                   ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'])
                context.user_data['state'] = 'main_menu'
                return

            # –°—á–∏—Ç–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
            total_cost = price_per_sqm * sqm

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            if total_cost < 1500:
                total_cost = 1500
                result_message = (
                    f'–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π —É–±–æ—Ä–∫–∏: 1500.00 —Ä—É–±.\n'
                    '–≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞.'
                )
            else:
                result_message = f'–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π —É–±–æ—Ä–∫–∏: {total_cost:.2f} —Ä—É–±. –∑–∞ {sqm:.2f} –∫–≤.–º.'

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await send_message(update, context, result_message, MENU_TREE['calculate_result']['options'])

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–æ—â–∞–¥—å –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            context.user_data['square_meters'] = sqm
            context.user_data['total_cost'] = total_cost

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–ø—É—Å–ª—É–≥–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è "–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº" –∏ "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ"
            selected_tariff = context.user_data.get('selected_tariff')
            if selected_tariff in ['–ì–µ–Ω.–£–±–æ—Ä–∫–∞üßº', '–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—èüßπ']:
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥, –∑–∞–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –¥–æ–ø—É—Å–ª—É–≥–∞–º–∏
                extras_options = [
                    ['–ì–ª–∞–∂–∫–∞ –±–µ–ª—å—è', '–°—Ç–∏—Ä–∫–∞ –±–µ–ª—å—è'],
                    ['–ü–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ—Ç–æ–∫', '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏'],
                    ['–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥(1 —Å—Ç–≤–æ—Ä–∫–∞)'],
                    ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô', '–°–≤—è–∑–∞—Ç—å—Å—èüìû']
                ]
                await send_message(update, context, "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏?", extras_options)
                context.user_data['state'] = 'add_extras'
            else:
                # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–∞—Ä–∏—Ñ –±–µ–∑ –¥–æ–ø—É—Å–ª—É–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ú—ã—Ç—å–µ –æ–∫–æ–Ω" –∏–ª–∏ "–ü–æ—Å–ª–µ—Å—Ç—Ä–æ–π"), –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞—Å—á–µ—Ç
                await send_message(update, context,
                                   "–†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É '–°–≤—è–∑–∞—Ç—å—Å—èüìû' !",
                                   MENU_TREE['calculate_result']['options'])
                context.user_data['state'] = 'main_menu'

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            logger.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {context.user_data['state']}")

            return  # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏

        except ValueError:
            # –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É –≤–≤–æ–¥—É
            logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–æ–≤: {user_choice}")
            await send_message(update, context, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–æ–≤.',
                               MENU_TREE['enter_square_meters']['options'])

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥
    if user_state == 'add_extras':
        if user_choice in ['–ì–ª–∞–∂–∫–∞ –±–µ–ª—å—è', '–°—Ç–∏—Ä–∫–∞ –±–µ–ª—å—è', '–ü–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ—Ç–æ–∫', '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏', '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥(1 —Å—Ç–≤–æ—Ä–∫–∞)']:
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–æ–ø—É—Å–ª—É–≥—É
            if user_choice == '–ì–ª–∞–∂–∫–∞ –±–µ–ª—å—è':
                context.user_data['total_cost'] += 300  # –ù–∞–ø—Ä–∏–º–µ—Ä, 300 —Ä—É–± –∑–∞ –≥–ª–∞–∂–∫—É
            elif user_choice == '–°—Ç–∏—Ä–∫–∞ –±–µ–ª—å—è':
                context.user_data['total_cost'] += 250  # –ù–∞–ø—Ä–∏–º–µ—Ä, 250 —Ä—É–± –∑–∞ —Å—Ç–∏—Ä–∫—É
            elif user_choice == '–ü–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ—Ç–æ–∫':
                context.user_data['total_cost'] += 150  # –ù–∞–ø—Ä–∏–º–µ—Ä, 150 —Ä—É–± –∑–∞ —á–∏—Å—Ç–∫—É –ª–æ—Ç–∫–∞
            elif user_choice == '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏':
                context.user_data['total_cost'] += 200  # –ù–∞–ø—Ä–∏–º–µ—Ä, 200 —Ä—É–± –∑–∞ —É—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏
            elif user_choice == '–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥(1 —Å—Ç–≤–æ—Ä–∫–∞)':
                context.user_data['total_cost'] += 350  # –ù–∞–ø—Ä–∏–º–µ—Ä, 350 —Ä—É–± –∑–∞ –æ–¥–Ω—É —Å—Ç–≤–æ—Ä–∫—É –æ–∫–Ω–∞

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –≤ user_data
            context.user_data.setdefault('selected_extras', []).append(user_choice)

            # –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            logger.info(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è: {context.user_data['state']}")

            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–±–æ—Ä –¥–æ–ø—É—Å–ª—É–≥, –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô"
            await send_message(update, context,
                               f"–£—Å–ª—É–≥–∞ {user_choice} –¥–æ–±–∞–≤–ª–µ–Ω–∞. –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {context.user_data['total_cost']} —Ä—É–±.\n–í—ã–±–µ—Ä–∏—Ç–µ –µ—â–µ —É—Å–ª—É–≥–∏ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.",
                               [['–ì–ª–∞–∂–∫–∞ –±–µ–ª—å—è', '–°—Ç–∏—Ä–∫–∞ –±–µ–ª—å—è'],
                                ['–ü–æ—á–∏—Å—Ç–∏—Ç—å –ª–æ—Ç–æ–∫', '–£—Ö–æ–¥ –∑–∞ —Ü–≤–µ—Ç–∞–º–∏'],
                                ['–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥(1 —Å—Ç–≤–æ—Ä–∫–∞)'],
                                ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô', '–°–≤—è–∑–∞—Ç—å—Å—èüìû']])  # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô" –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω–∞

            # –û—Å—Ç–∞–µ–º—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ add_extras, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ —É—Å–ª—É–≥–∏
            # –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏
            context.user_data['state'] = 'add_extras'
            logger.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {context.user_data['state']}")

            # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏ —Å–º–µ–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è
            return


        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–°–≤—è–∑–∞—Ç—å—Å—èüìû", –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞—Å—á–µ—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
        elif user_choice == '–°–≤—è–∑–∞—Ç—å—Å—èüìû':
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
            total_cost = context.user_data['total_cost']
            selected_extras = ", ".join(context.user_data.get('selected_extras', []))

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –¥–æ–ø—É—Å–ª—É–≥–∞–º–∏
            final_message = f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–±–æ—Ä–∫–∏: {total_cost:.2f} —Ä—É–±."
            if selected_extras:
                final_message += f"\n–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏: {selected_extras}"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            await send_message(update, context, final_message, MENU_TREE['calculate_result']['options'])

            # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–°–≤—è–∑–∞—Ç—å—Å—è"
            context.user_data['state'] = 'contact'
            buttons = [
                [InlineKeyboardButton("WhatsApp", url="https://wa.me/79956124581")],
                [InlineKeyboardButton("Telegram", url="https://t.me/kaliroom")],
                [InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä", callback_data="show_phone_number")]
            ]
            await send_inline_message(update, context, MENU_TREE['contact']['message'], buttons)

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–í –Ω–∞—á–∞–ª–æ", —Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        elif user_choice == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô':
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
            total_cost = context.user_data['total_cost']
            selected_extras = ", ".join(context.user_data.get('selected_extras', []))

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            final_message = f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–±–æ—Ä–∫–∏: {total_cost:.2f} —Ä—É–±."
            if selected_extras:
                final_message += f"\n–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏: {selected_extras}"

            await send_message(update, context, final_message, MENU_TREE['calculate_result']['options'])

            # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            context.user_data['state'] = 'main_menu'
            await send_message(update, context, MENU_TREE['main_menu']['message'], MENU_TREE['main_menu']['options'])

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥, –∫–æ–≥–¥–∞ —Ä–∞—Å—á–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω
        context.user_data.pop('selected_extras', None)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–∫–æ–Ω–Ω—ã—Ö —Å—Ç–≤–æ—Ä–æ–∫ –¥–ª—è —Ç–∞—Ä–∏—Ñ–∞ "–º—ã—Ç—å–µ –æ–∫–æ–Ω"
    if user_state == 'enter_window_panels':
        try:
            num_panels = int(user_choice)
            price_per_panel = CLEANING_PRICES['–ú—ã—Ç—å–µ –æ–∫–æ–Ωüß¥']

            result = calculate_windows(price_per_panel, num_panels)

            await send_message(update, context, result['formatted_message'], MENU_TREE['calculate_result']['options'])
            context.user_data['state'] = 'main_menu'
        except ValueError:
            await send_message(update, context, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–∫–æ–Ω–Ω—ã—Ö —Å—Ç–≤–æ—Ä–æ–∫.',
                               ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô'])
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é "–°–≤—è–∑–∞—Ç—å—Å—èüìû"
    if user_state == 'main_menu' and user_choice == '–°–≤—è–∑–∞—Ç—å—Å—èüìû':
        context.user_data['state'] = 'contact'

        buttons = [
            [InlineKeyboardButton("WhatsApp", url="https://wa.me/79956124581")],
            [InlineKeyboardButton("Telegram", url="https://t.me/kaliroom")],
            [InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä", callback_data="show_phone_number")]
        ]
        await send_inline_message(update, context, MENU_TREE['contact']['message'], buttons)

        reply_keyboard = [['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô']]
        reply_markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=reply_markup)
        return

    if user_choice in menu['next_state']:
        next_state = menu['next_state'][user_choice]
        context.user_data['state'] = next_state

        if next_state == 'enter_square_meters':
            context.user_data['selected_tariff'] = user_choice  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ
        next_menu = MENU_TREE.get(next_state)
        if next_menu:
            await send_message(update, context, next_menu['message'], next_menu['options'])
    else:
        await send_message(update, context, menu.get('fallback', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.'),
                           menu['options'])


async def moderate_reviews(update: Update, context: ContextTypes.DEFAULT_TYPE, user_state: str) -> None:
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç–∑—ã–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
    pending_reviews = [review for review in context.application.bot_data.get('reviews', [])
                       if not review.get('approved', False) and not review.get('deleted', False)]

    if not pending_reviews:
        await send_message(update, context, "–ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏.", MENU_TREE['admin_menu']['options'])
        context.user_data['state'] = 'admin_menu'
        return

    for review in pending_reviews:
        try:
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ü–µ–ª–∏–∫–æ–º, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π message_id
            await context.bot.forward_message(
                chat_id=ADMIN_ID,
                from_chat_id=review['user_id'],
                message_id=review['message_id']  # –ò—Å–ø–æ–ª—å–∑—É–µ–º `message_id` –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –≤—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            )

            buttons = [
                [InlineKeyboardButton(f"–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å‚úÖ", callback_data=f'publish_{review["message_id"]}'),
                 InlineKeyboardButton(f"–£–¥–∞–ª–∏—Ç—åüóëÔ∏è", callback_data=f'delete_{review["message_id"]}')]
            ]
            reply_markup = InlineKeyboardMarkup(buttons)
            await context.bot.send_message(chat_id=ADMIN_ID, text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    context.user_data['state'] = 'moderation_menu'


# –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_state = context.user_data.get('state', 'main_menu')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if query.data == "show_phone_number":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        await query.message.reply_text("–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +79956124581")
        return

    # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    if user_state == 'moderation_menu':
        # –ò—â–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∏ message_id –≤ callback_data
        action, message_id = query.data.split('_')
        pending_reviews = context.application.bot_data.get('reviews', [])
        review = next((r for r in pending_reviews if str(r['message_id']) == message_id), None)

        if review:
            if action == 'delete':
                # –û—Ç–º–µ—á–∞–µ–º –æ—Ç–∑—ã–≤ –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–π
                review['deleted'] = True
                await query.edit_message_text(text="–û—Ç–∑—ã–≤ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω.")
                context.application.bot_data['reviews'].remove(review)

            elif action == 'publish':
                # –û—Ç–º–µ—á–∞–µ–º –æ—Ç–∑—ã–≤ –∫–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–π
                review['approved'] = True
                await publish_review(context, review)
                await query.edit_message_text(text="–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.")
                for r in context.application.bot_data['reviews']:
                    if r['user_id'] == review['user_id'] and r['message_id'] == review['message_id']:
                        r['approved'] = True

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        remaining_reviews = [r for r in pending_reviews if not r.get('approved', False) and not r.get('deleted', False)]
        if not remaining_reviews:
            await context.bot.send_message(chat_id=query.message.chat_id, text="–í—Å–µ –æ—Ç–∑—ã–≤—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")
            context.user_data.pop('pending_reviews', None)
            context.user_data['state'] = 'admin_menu'
            return

        context.user_data['state'] = 'moderation_menu'


async def show_useful_info(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª
    channel_url = "https://t.me/+7YI7c3pWXhQwMTcy"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à—É —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É

    # –°–æ–∑–¥–∞–µ–º Inline-–∫–Ω–æ–ø–∫—É —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–∞–Ω–∞–ª
    buttons = [[InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url=channel_url)]]
    reply_markup = InlineKeyboardMarkup(buttons)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Inline-–∫–Ω–æ–ø–∫–æ–π
    await update.message.reply_text(
        "–ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, –∞–∫—Ü–∏–π –∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π!",
        reply_markup=reply_markup
    )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –≤ –∫–∞–Ω–∞–ª
async def publish_review(context: ContextTypes.DEFAULT_TYPE, review: dict) -> None:
    try:
        if review['photo_file_ids']:
            if len(review['photo_file_ids']) > 1:
                media_group = [InputMediaPhoto(photo_id) for photo_id in review['photo_file_ids']]
                await context.bot.send_media_group(chat_id=CHANNEL_ID, media=media_group)
            else:
                await context.bot.send_photo(chat_id=CHANNEL_ID, photo=review['photo_file_ids'][0])

        await context.bot.forward_message(
            chat_id=CHANNEL_ID,
            from_chat_id=review['user_id'],
            message_id=review['message_id']
        )

        review['approved'] = True
        logger.info(f"–û—Ç–∑—ã–≤ –æ—Ç {review['user_name']} —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–∞: {e}")
        await context.bot.send_message(chat_id=ADMIN_ID,
                                       text=f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤ –æ—Ç {review['user_name']}. –û—à–∏–±–∫–∞: {e}")


def calculate(price_per_sqm, sqm):
    total_cost = price_per_sqm * sqm

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    if total_cost < 1500:
        total_cost = 1500
        formatted_message = (
            f'–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π —É–±–æ—Ä–∫–∏: 1500.00 —Ä—É–±.\n'
            '–≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞.'
        )
    else:
        formatted_message = f'–°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–µ–π —É–±–æ—Ä–∫–∏: {total_cost:.2f} —Ä—É–±.'

    return {
        'total_cost': total_cost,
        'formatted_message': formatted_message
    }


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º—ã—Ç—å—è –æ–∫–æ–Ω
def calculate_windows(price_per_panel, num_panels):
    total_cost = price_per_panel * num_panels

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    if total_cost < 1500:
        total_cost = 1500
        formatted_message = (
            f'–°—Ç–æ–∏–º–æ—Å—Ç—å –º—ã—Ç—å—è –æ–∫–æ–Ω: 1500.00 —Ä—É–±.\n'
            '–≠—Ç–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞.'
        )
    else:
        formatted_message = f'–°—Ç–æ–∏–º–æ—Å—Ç—å –º—ã—Ç—å—è –æ–∫–æ–Ω: {total_cost:.2f} —Ä—É–±. –∑–∞ {num_panels} —Å—Ç–≤–æ—Ä–æ–∫(–∏).'

    return {
        'total_cost': total_cost,
        'formatted_message': formatted_message
    }


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.message.from_user.id
    if user_id == ADMIN_ID:
        context.user_data['state'] = 'admin_menu'
        menu = MENU_TREE['admin_menu']
    else:
        context.user_data['state'] = 'main_menu'
        menu = MENU_TREE['main_menu']

    await send_message(update, context, menu['message'], menu['options'])


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")

    TOKEN = '7363733923:AAHKPw_fvjG2F3PBE2XP6Sj49u04uy7wpZE'

    application = Application.builder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT | filters.PHOTO & ~filters.COMMAND, handle_message))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(button_click))

    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω, –Ω–∞—á–∞–ª–æ polling...")
    application.run_polling()


if __name__ == '__main__':
    main()
